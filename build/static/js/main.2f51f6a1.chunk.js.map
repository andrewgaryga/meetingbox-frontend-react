{"version":3,"sources":["components/MeetingList.js","components/PersonalList.js","components/MeetingsForm.js","components/PersonalForm.js","components/ToggleRender.js","components/TodoListSearch.js","components/ToggleMainContent.js","App.js","serviceWorker.js","index.js"],"names":["TodoList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","findUnmatchedText","name","info","textToHighlight","indexOf","passId","id","setState","itemId","getItemById","getMeetings","then","data","buildMeetings","catch","reason","console","log","message","state","filter","item","isPassed","date","Date","parse","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","arguments","toggleCancel","_ref2","_callee2","type","_context2","concat","method","body","JSON","stringify","headers","Content-Type","toggleRefresh","_x2","_x3","_this2","_this3","refresh","_this4","react_default","createElement","Fragment","className","map","index","display","information","key","main_default","highlightClassName","searchWords","autoEscape","toString","isCancel","onClick","toggleDelete","personal","persona","location","Component","surname","department","position","getPersonal","buildPersonal","TodoInput","handleAddMeeting","newKey","uuidv4","mode","_x4","_x5","handleSelect","handleChange","defineProperty","target","value","handleDate","handleSubmit","preventDefault","personalArray","forEach","push","selectOptionsInit","renderlist","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","element","label","err","return","_x6","selectOptions","onSubmit","placeholder","onChange","required","react_select_esm","options","isMulti","es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","cols","rows","buildSelectOptions","selectName","buildDepartments","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","positions","unshift","disabled","getDepartments","handleAddPersonal","ToggleRender","role","whatToRender","toggleRender","TodoSearch","handleSearch","filterText","ToggleMainContent","whatToRefresh","refreshPersonal","refreshMeetings","componentName","components_ToggleRender","MeetingList","MeetingsForm","TodoListSearch","PersonalList","PersonalForm","App","ToggleMainContent_ToggleMainContent","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f51f6a1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemId: null,\r\n      textToHighlight: \"\",\r\n      buildMeetings: []\r\n    };\r\n  }\r\n\r\n  findUnmatchedText = (name, info) => {\r\n    // if user typed something, but it's doesn't match with text\r\n    if (\r\n      this.props.textToHighlight &&\r\n      !(name.indexOf(this.props.textToHighlight) > -1) &&\r\n      !(info.indexOf(this.props.textToHighlight) > -1)\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  // if itemId === true, react will render full view for this item instead of list\r\n  passId = id => {\r\n    this.setState({\r\n      itemId: id\r\n    });\r\n  };\r\n\r\n  getItemById = () => {\r\n    this.getMeetings()\r\n    .then(data =>\r\n      this.setState({\r\n        buildMeetings: data\r\n      })\r\n    )\r\n    .catch(reason => console.log(reason.message));\r\n    return this.state.buildMeetings.filter(\r\n      item => item.id === this.state.itemId\r\n    );\r\n  };\r\n\r\n  isPassed = date => {\r\n    return Date.parse(date) < new Date() ? true : false;\r\n  };\r\n\r\n  getMeetings = async e => {\r\n    const response = await fetch(`https://meetings-backend-e2w62dz1v.now.sh/meetings/`);\r\n    let data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  toggleCancel = async (id, type) => {\r\n    const data = {\r\n      id: id\r\n    }\r\n    const response = await fetch(`https://meetings-backend-e2w62dz1v.now.sh/${type}/toggleComplete`, {\r\n      method: 'post',\r\n      body: JSON.stringify(data), // data can be `string` or {object}!\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    this.props.toggleRefresh('meetings');\r\n  };\r\n\r\n  // Init meetings list\r\n  componentDidMount() {\r\n    this.getMeetings()\r\n      .then(data =>\r\n        this.setState({\r\n          buildMeetings: data\r\n        })\r\n      )\r\n      .catch(reason => console.log(reason.message));\r\n  }\r\n\r\n  // Togggle items re-render on form submit\r\n  componentWillReceiveProps(props) {\r\n    const { refresh } = this.props;\r\n    if (props.refresh !== refresh) {\r\n      this.getMeetings()\r\n        .then(data =>\r\n          this.setState({\r\n            buildMeetings: data\r\n          })\r\n        )\r\n        .catch(reason => console.log(reason.message));\r\n    }\r\n  }\r\n  render() {\r\n    if (!this.state.itemId) {\r\n      return (\r\n        <React.Fragment>\r\n          <main className=\"card-container\">\r\n            {this.state.buildMeetings.map((item, index) => {\r\n              // Hide items with NO matches from search queue\r\n              if (!item.display || this.findUnmatchedText(item.name, item.information)) {\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                \r\n                <article key={item.id} className=\"card\" >\r\n                  <h4 className=\"card-title\">\r\n                    {this.props.textToHighlight \r\n                      ? <Highlighter\r\n                          highlightClassName=\"YourHighlightClass\"\r\n                          searchWords={[this.props.textToHighlight]}\r\n                          autoEscape={true}\r\n                          textToHighlight={item.name}\r\n                        />\r\n                      : item.name\r\n                    }\r\n                  </h4>\r\n                  <p className=\"card-text\">\r\n                    {this.props.textToHighlight \r\n                      ? <Highlighter\r\n                          highlightClassName=\"YourHighlightClass\"\r\n                          searchWords={[this.props.textToHighlight]}\r\n                          autoEscape={true}\r\n                          textToHighlight={item.information}\r\n                        />\r\n                      : item.information\r\n                    }\r\n                  </p>\r\n                  <small className=\"card-text date\">\r\n                    {this.isPassed(item.date.toString()) \r\n                        ? <span className=\"badge badge-passed\">Passed</span>\r\n                        : ''\r\n                    }\r\n                    {item.isCancel\r\n                        ? <span className=\"badge badge-cancel\">Canceled</span>\r\n                        : ''\r\n                    }\r\n                    {item.date}\r\n                  </small>\r\n                  <div className=\"card-footer\">\r\n                    <button\r\n                      className={item.isCancel ? \"text-small btn-uncancel\" : \"text-small btn-cancel\"}\r\n                      onClick={() => {\r\n                        this.toggleCancel(item.id, \"meetings\");\r\n                      }}\r\n                    >\r\n                      {item.isCancel ? \"Uncancel\" : \"Cancel\"}\r\n                    </button>\r\n                    <button\r\n                      className=\"btn-remove text-small\"\r\n                      onClick={() => {\r\n                        this.props.toggleDelete(item.id, \"meetings\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button \r\n                      className=\"btn-outline text-small\"\r\n                      onClick={() => { this.passId(item.id); }}\r\n                    >\r\n                      Details\r\n                    </button>\r\n                  </div>\r\n                </article>             \r\n            );\r\n          })}\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    // One item view\r\n    let item = this.getItemById()[0];\r\n    return (\r\n      <main className=\"card-container\">\r\n        <article key={item.id} className=\"card details\">\r\n          <button \r\n            className=\"link-back\" \r\n            onClick={() => { this.passId(null); }}\r\n          >\r\n            <i className=\"fas fa-arrow-left\"></i>Go back\r\n          </button>\r\n          <h4 className=\"card-title\">\r\n            {this.props.textToHighlight \r\n              ? <Highlighter\r\n                  highlightClassName=\"YourHighlightClass\"\r\n                  searchWords={[this.props.textToHighlight]}\r\n                  autoEscape={true}\r\n                  textToHighlight={item.name}\r\n                />\r\n              : item.name\r\n            }\r\n          </h4>\r\n          <p className=\"card-text\">\r\n            {this.props.textToHighlight \r\n              ? <Highlighter\r\n                  highlightClassName=\"YourHighlightClass\"\r\n                  searchWords={[this.props.textToHighlight]}\r\n                  autoEscape={true}\r\n                  textToHighlight={item.information}\r\n                />\r\n              : item.information\r\n            }\r\n          </p>\r\n          <small className=\"card-text date\">\r\n            {this.isPassed(item.date.toString()) \r\n                ? <span className=\"badge badge-passed\">Passed</span>\r\n                : ''\r\n            }\r\n            {item.isCancel \r\n                ? <span className=\"badge badge-cancel\">Canceled</span>\r\n                : ''\r\n            }\r\n            {item.date}\r\n          </small>\r\n          <ul className=\"personal-group\">\r\n            <li className=\"personal-group-item\">Included personal:</li>\r\n            {item.personal.map(\r\n            persona => <li className=\"personal-group-item\" key={persona}>{persona}</li>)}\r\n          </ul>\r\n          <div className=\"card-footer\">\r\n              <p className=\"card-text\">Location: {item.location}</p>\r\n              <button\r\n                className={item.isCancel ? \"text-small btn-uncancel\" : \"text-small btn-cancel\"}\r\n                onClick={() => {\r\n                  this.toggleCancel(item.id, \"meetings\");\r\n                }}\r\n              >\r\n                {item.isCancel ? \"Uncancel\" : \"Cancel\"}\r\n              </button>\r\n              <button\r\n                className=\"btn-remove text-small\"\r\n                onClick={() => {\r\n                  this.props.toggleDelete(item.id, \"meetings\");\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n          </div>\r\n        </article>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buildPersonal: []\r\n    }\r\n  }\r\n  \r\n  findUnmatchedText = (name, surname, department, position) => {\r\n    // if user typed something, but it's doesn't match with text \r\n    if (this.props.textToHighlight && !(name.indexOf(this.props.textToHighlight) > -1) && !(surname.indexOf(this.props.textToHighlight) > -1) && !(department.indexOf(this.props.textToHighlight) > -1) && !(position.indexOf(this.props.textToHighlight) > -1)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPersonal = async (e) => {\r\n    const response =  await fetch(`https://meetings-backend-e2w62dz1v.now.sh/personal/`);\r\n    let data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPersonal()\r\n      .then(data => this.setState({\r\n          buildPersonal: data\r\n        }))\r\n      .catch(reason => console.log(reason.message))\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    const { refresh } = this.props;\r\n    if (props.refresh !== refresh) {\r\n      this.getPersonal()\r\n        .then(data => this.setState({\r\n            buildPersonal: data\r\n          }))\r\n        .catch(reason => console.log(reason.message))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <main className=\"card-container personal\">\r\n        {this.state.buildPersonal.map((item, index) => {\r\n          if (this.findUnmatchedText(item.name, item.surname, item.department, item.position)) {\r\n            return null;\r\n          } \r\n          return (\r\n            <article key={item.id} className=\"card\">\r\n            <h4 className=\"card-title\">\r\n              {\r\n                this.props.textToHighlight \r\n                ? <Highlighter\r\n                    highlightClassName=\"YourHighlightClass\"\r\n                    searchWords={[this.props.textToHighlight]}\r\n                    autoEscape={true}\r\n                    textToHighlight={item.name}\r\n                  /> \r\n                : item.name\r\n              } \r\n              &nbsp;\r\n              {\r\n                this.props.textToHighlight \r\n                ? <Highlighter\r\n                    highlightClassName=\"YourHighlightClass\"\r\n                    searchWords={[this.props.textToHighlight]}\r\n                    autoEscape={true}\r\n                    textToHighlight={item.surname}\r\n                  /> \r\n                : item.surname\r\n              }\r\n            </h4>\r\n            <p className=\"card-text\">\r\n              {\r\n                this.props.textToHighlight \r\n                ? <Highlighter\r\n                    highlightClassName=\"YourHighlightClass\"\r\n                    searchWords={[this.props.textToHighlight]}\r\n                    autoEscape={true}\r\n                    textToHighlight={item.department}\r\n                  /> \r\n                : item.department\r\n              } \r\n                &nbsp; | &nbsp; \r\n              {\r\n                this.props.textToHighlight \r\n                ? <Highlighter\r\n                    highlightClassName=\"YourHighlightClass\"\r\n                    searchWords={[this.props.textToHighlight]}\r\n                    autoEscape={true}\r\n                    textToHighlight={item.position}\r\n                  /> \r\n                : item.position\r\n              }\r\n            </p>\r\n\r\n            <div className=\"card-footer\">\r\n              <button\r\n                className=\"btn-remove text-small\"\r\n                onClick={() => { this.props.toggleDelete(item.id, \"personal\"); }}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </article>\r\n          )\r\n        })}\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from 'react-select';\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass TodoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      information: \"\",\r\n      personal: null,\r\n      date: new Date(),\r\n      location: \"\",\r\n      selectOptions: null\r\n    }\r\n  }\r\n\r\n  handleAddMeeting = async (name, information, personal, date, location) => {\r\n    const newKey = uuidv4();\r\n    const data = {\r\n      id: newKey,\r\n      name: name,\r\n      information: information,\r\n      personal: personal,\r\n      date: date,\r\n      location: location,\r\n    };\r\n\r\n    const response = await fetch('https://meetings-backend-e2w62dz1v.now.sh/meetings/add', {\r\n      method: 'POST', // or 'PUT'\r\n      mode: \"cors\",\r\n      body: JSON.stringify(data), // data can be `string` or {object}!\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    this.props.toggleRefresh('meetings');\r\n  }\r\n\r\n  handleSelect = (personal) => {\r\n    this.setState({ personal });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleDate = (date) => {\r\n    this.setState({ date });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let personalArray = [];\r\n    this.state.personal.forEach(persona => {\r\n      personalArray.push(persona.value);\r\n    });\r\n    this.handleAddMeeting(this.state.name, this.state.information, personalArray, this.state.date.toString(), this.state.location);\r\n  };\r\n\r\n  selectOptionsInit = () => {\r\n    let renderlist = [];\r\n    for (const element of this.state.buildPersonal) {\r\n      renderlist.push({ value: element.name + ' ' + element.surname, label: element.name + ' ' + element.surname })\r\n    }\r\n    return renderlist;\r\n  }\r\n\r\n  getPersonal = async (e) => {\r\n    const response =  await fetch(`https://meetings-backend-e2w62dz1v.now.sh/personal/`);\r\n    let data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPersonal()\r\n      .then(data => this.setState({\r\n          buildPersonal: data\r\n        }))\r\n      .catch(reason => console.log(reason.message))\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-title\">Add new meeting</h4>\r\n        <form className=\"form-styled\" onSubmit={this.handleSubmit} id={this.props.id}>\r\n          <div className=\"form-group\">\r\n            <input name=\"name\" type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} required/>\r\n            {  \r\n              this.state.buildPersonal\r\n              ?  <Select\r\n                    value={this.state.personal}\r\n                    onChange={this.handleSelect}\r\n                    options={this.selectOptionsInit()}\r\n                    isMulti\r\n                  />\r\n              : 'loading...'\r\n            }         \r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.handleDate}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              timeCaption=\"time\"\r\n            />\r\n            <select name=\"location\" onChange={this.handleChange}>\r\n              <option value=\"Meeting room\">Meeting room</option> \r\n              <option value=\"Projector room\">Projector room</option>\r\n              <option value=\"Negotiation room\">Negotiation room</option>\r\n            </select>\r\n            <textarea name=\"information\" cols=\"30\" rows=\"3\" placeholder=\"Information\" value={this.state.message} onChange={this.handleChange} required></textarea>\r\n            <button className=\"btn-outline\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoInput;\r\n","import React, { Component } from \"react\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nclass TodoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      surname: \"\",\r\n      department: \"Sales\",\r\n      position: \"\"\r\n    }\r\n  }\r\n\r\n  buildSelectOptions = (selectName, e) => {\r\n    let renderlist = [];\r\n    if (selectName === \"department\") {\r\n      for (const department of this.state.buildDepartments) {\r\n        renderlist.push(<option value={department.name} key={department.name}>{department.name}</option>)\r\n      }\r\n      return renderlist;\r\n    } else if (selectName === \"position\") {\r\n      for (const department of this.state.buildDepartments) {\r\n        if (department.name === this.state.department) {\r\n          renderlist = department.positions.map(position => <option value={position} key={position}>{position}</option>);\r\n        }\r\n      }\r\n      /* \r\n        Initial select value is undefined, beacause it changes only when user change select option.\r\n        To prevent passing undefined, I added a placeholder value. \r\n      */\r\n      renderlist.unshift(<option value=\"\" key=\"placeholder\" disabled selected>Select position</option>)\r\n      return renderlist;\r\n    }\r\n  }\r\n\r\n  getDepartments = async (e) => {\r\n    const response =  await fetch(`https://meetings-backend-e2w62dz1v.now.sh/departments/`);\r\n    let data = await response.json();\r\n    return data;\r\n  }\r\n\r\n  handleAddPersonal = async (name, surname, department, position) => {\r\n    const newKey = uuidv4();\r\n    const data = {\r\n      id: newKey,\r\n      name: name,\r\n      surname: surname,\r\n      department: department,\r\n      position: position\r\n    }\r\n\r\n    const response = await fetch('https://meetings-backend-e2w62dz1v.now.sh/personal/add', {\r\n      method: 'POST', // or 'PUT'\r\n      mode: \"cors\",\r\n      body: JSON.stringify(data), // data can be `string` or {object}!\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    this.props.toggleRefresh('personal');\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSelect = (personal) => {\r\n    this.setState({ personal });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.handleAddPersonal(this.state.name, this.state.surname, this.state.department, this.state.position);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDepartments()\r\n      .then(data => this.setState({\r\n          buildDepartments: data\r\n        }))\r\n      .catch(reason => console.log(reason.message))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-title\">Add new worker</h4>\r\n        <form className=\"form-styled\" onSubmit={this.handleSubmit} id={this.props.id}>\r\n          <div className=\"form-group\">\r\n            <input name=\"name\" type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} required/>\r\n            <input name=\"surname\" type=\"text\" placeholder=\"Surname\" value={this.state.surname} onChange={this.handleChange} required/>\r\n            <select name=\"department\" onChange={this.handleChange}>\r\n              {/* at the moment of calling .buildSelectOptions()\r\n                   promise from getDepartments() is unresolved and\r\n                   state.buildDepartments is undefined, so select show\r\n                   loading untill promise will resolve \r\n                */\r\n              this.state.buildDepartments\r\n                ? this.buildSelectOptions(\"department\")\r\n                : \"loading...\"}\r\n            </select>\r\n            <select name=\"position\" onChange={this.handleChange} required>\r\n              {this.state.buildDepartments\r\n                ? this.buildSelectOptions(\"position\")\r\n                : \"loading...\"}\r\n            </select>\r\n            <button className=\"btn-outline\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from \"react\";\r\n\r\nfunction ToggleRender(props) {\r\n  return (\r\n    <nav id=\"single-line-menu\" className=\"single-nav menu render-toggle\" role=\"navigation\">\r\n      <ul>\r\n        <li><button className={props.whatToRender === \"MeetingList\" ? \"active\" : \"\"} onClick={() => props.toggleRender('MeetingList')}>Meetings</button></li>\r\n        <li><button className={props.whatToRender === \"PersonalList\" ? \"active\" : \"\"} onClick={() => props.toggleRender('PersonalList')}>Personal</button></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default ToggleRender;\r\n","import React from \"react\";\r\n\r\nfunction TodoSearch(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"form form-search\">\r\n        <div className=\"icon-container\"><i className=\"fas fa-search\" /></div>  \r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"search\"\r\n          placeholder=\"Type to search...\"\r\n          onChange={props.handleSearch}\r\n          value={props.filterText}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoSearch;\r\n","import React, { Component } from 'react';\r\nimport MeetingList from \"./MeetingList\";\r\nimport PersonalList from \"./PersonalList\";\r\nimport MeetingsForm from \"./MeetingsForm\";\r\nimport PersonalForm from \"./PersonalForm\";\r\nimport ToggleRender from \"./ToggleRender\";\r\nimport TodoListSearch from \"./TodoListSearch\";\r\n\r\nexport default class ToggleMainContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      whatToRender: 'MeetingList',\r\n      refreshMeetings: false,\r\n      refreshPersonal: false,\r\n      textToHighlight: ''\r\n    }\r\n  }\r\n\r\n  handleSearch = e => {\r\n    this.setState({\r\n      textToHighlight: e.target.value\r\n    });\r\n  };\r\n\r\n  toggleDelete = async (id, type) => {\r\n    const data = {\r\n      id: id\r\n    }\r\n    const response = await fetch(`https://meetings-backend-e2w62dz1v.now.sh/${type}/delete`, {\r\n      method: 'post',\r\n      body: JSON.stringify(data), // data can be `string` or {object}!\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    let data2 = await response.json();\r\n    this.toggleRefresh(type);\r\n  };\r\n  \r\n  toggleRefresh = (whatToRefresh) => {\r\n    if (whatToRefresh === 'personal') {\r\n      this.setState({refreshPersonal: !this.state.refreshPersonal})\r\n    } else if (whatToRefresh === 'meetings') {\r\n      this.setState({refreshMeetings: !this.state.refreshMeetings})\r\n    }\r\n  }\r\n\r\n  toggleRender = (componentName) => {\r\n    this.setState({\r\n      whatToRender: componentName\r\n    })\r\n  }\r\n\r\n  render() {\r\n    switch(this.state.whatToRender) {\r\n      case 'MeetingList':\r\n        return (\r\n            <React.Fragment>\r\n              <ToggleRender toggleRender={this.toggleRender} whatToRender={this.state.whatToRender} />\r\n              <MeetingList\r\n                refresh={this.state.refreshMeetings}\r\n                toggleDelete={this.toggleDelete}\r\n                toggleRefresh={this.toggleRefresh}  \r\n                textToHighlight={this.state.textToHighlight}                \r\n              />\r\n              <aside className=\"sidebar\">\r\n                <MeetingsForm toggleRefresh={this.toggleRefresh} id=\"myForm\" />\r\n                <TodoListSearch handleSearch={this.handleSearch} filterText={this.state.textToHighlight}/>\r\n              </aside>\r\n            </React.Fragment>\r\n          )\r\n      case 'PersonalList':\r\n        return (\r\n          <React.Fragment>\r\n            <ToggleRender toggleRender={this.toggleRender} whatToRender={this.state.whatToRender} />\r\n            <PersonalList\r\n              toggleDelete={this.toggleDelete}\r\n              refresh={this.state.refreshPersonal}\r\n              textToHighlight={this.state.textToHighlight}\r\n            />\r\n            <aside className=\"sidebar\">\r\n              <PersonalForm toggleRefresh={this.toggleRefresh} id=\"PersonalForm\" /> \r\n              <TodoListSearch handleSearch={this.handleSearch} filterText={this.state.textToHighlight}/>\r\n            </aside>\r\n          </React.Fragment>\r\n        )\r\n      case 'DepartmentsList':\r\n        return <h4>Departments page will be in future.</h4>\r\n      case 'Settings':\r\n        return <h4>Settings page will be in future.</h4>\r\n      default: \r\n        return <h4>404 not found</h4>\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport ToggleMainContent from \"./components/ToggleMainContent\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToggleMainContent />\n        <footer>\n          <div className=\"copyright\">&copy; 2018</div>\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}